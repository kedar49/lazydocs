import * as fs from 'fs';
import simpleGit from 'simple-git';
import { generateDocSection, AIOptions } from '../ai';

export async function generateChangelog(
  inputDir: string,
  outputFile: string,
  apiKey: string,
  aiOptions?: AIOptions
) {
  console.log('Analyzing git history...');

  const git = simpleGit(inputDir);

  try {
    // Get recent commits (last 50)
    const logs = await git.log({ maxCount: 50 });

    const snippet = `
Total commits analyzed: ${logs.total}

Recent commits:
${logs.all
        .map(
          (l) => `
- ${l.date}: ${l.message}
  Author: ${l.author_name}
  Hash: ${l.hash.substring(0, 7)}
`
        )
        .join('\n')}
`;

    console.log(`  Analyzed ${logs.total} commits`);
    console.log('Generating changelog...');

    const changelog = await generateDocSection(snippet, 'changelog', apiKey, undefined, aiOptions);

    // Prepend version and date
    const today = new Date().toISOString().split('T')[0];
    const fullChangelog = `# Changelog

## [Unreleased] - ${today}

${changelog}

---
*Generated by LazyDocs*
`;

    fs.writeFileSync(outputFile, fullChangelog);
  } catch (error: any) {
    if (error.message.includes('not a git repository')) {
      throw new Error('Not a git repository. Please run this command in a git repository.');
    }
    throw error;
  }
}
