name: Release

on:
  push:
    tags:
      - 'v*.*.*'

permissions:
  contents: write
  packages: write

jobs:
  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run tests
        run: npm test
      
      - name: Build project
        run: npm run build
      
      - name: Get version from tag
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
      
      - name: Generate changelog for this release
        id: changelog
        run: |
          VERSION=${{ steps.get_version.outputs.VERSION }}
          if [ -f CHANGELOG.md ]; then
            CHANGELOG=$(sed -n "/## \[$VERSION\]/,/## \[/p" CHANGELOG.md | sed '$d' || echo "See CHANGELOG.md for details")
          else
            CHANGELOG="See repository for details"
          fi
          echo "CHANGELOG<<EOF" >> $GITHUB_OUTPUT
          echo "$CHANGELOG" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
      
      - name: Package for distribution
        run: |
          mkdir -p dist-package
          cp -r dist package.json README.md LICENSE dist-package/
          if [ -f CHANGELOG.md ]; then
            cp CHANGELOG.md dist-package/
          fi
          cd dist-package
          tar -czf ../lazydocs-${{ steps.get_version.outputs.VERSION }}.tar.gz .
      
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          name: LazyDocs v${{ steps.get_version.outputs.VERSION }}
          body: |
            # LazyDocs v${{ steps.get_version.outputs.VERSION }}
            
            ## What's New
            
            ${{ steps.changelog.outputs.CHANGELOG }}
            
            ## Installation
            
            ```bash
            npm install -g @tfkedar/lazydocs@${{ steps.get_version.outputs.VERSION }}
            ```
            
            ## Quick Start
            
            ```bash
            # Configure
            lazydocs config set GROQ_API_KEY=your_key
            
            # Generate
            lazydocs generate --interactive
            ```
            
            ## Links
            
            - [NPM Package](https://www.npmjs.com/package/@tfkedar/lazydocs)
            - [Documentation](https://github.com/${{ github.repository }}#readme)
            - [Changelog](https://github.com/${{ github.repository }}/blob/main/CHANGELOG.md)
          draft: false
          prerelease: false
          files: |
            lazydocs-${{ steps.get_version.outputs.VERSION }}.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
